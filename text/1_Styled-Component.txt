[ Styled Component ]
- npm i styled-components
- import styled from 'styled-components'

- Father라는 컴포넌트를 생성해 styled.[생성할 태그]`적용할 CSS`

const Father = styled.div`
    display: flex;
  `;

- 이렇게 사용이 가능하다.
<Father></Father>

- CSS의 프로퍼티값을 변수처리하고 싶은 경우에는 생성한 컴포넌트에 props 값을 주어 display:${(props)=>prorps.setDisplay}
  이렇게 사용도 가능하다.

----------------------------------------------------------------
[ Styled Component 확장 ]

- styled()를 사용해서 컴포넌트를 확장시킬 수 있다.

- styled()에 Box 컴포넌트를 넣어서 Box의 속성을 모두 복사하고 그 뒤에 다른 속성을 추가한다.
const Box = styled.div`
  background-color: ${(props) => props.bgColor};
  width: 100px;
  height: 100px;
`;
const Circle = styled(Box)`
  border-radius: 50%;
`;

----------------------------------------------------------------
[ as ]
- as prop을 통해서 컴포넌트의 태그를 바꿔줄 수 있다.

- a 태그로 변환 시킨다.
<Button as="a">버튼<Button> 

----------------------------------------------------------------
[ 디폴트 속성 지정하기 ]
- styled.태그.attr({속성})을 통해 이 컴포넌트에 디폴트 속성을 지정할 수 있다.

- Input 컴포넌트에 required 속성을 넣고 싶을 때
const Input = styled.input.attr({required:true})` background:red `;

----------------------------------------------------------------
[ Animation 기능 사용 ]
- keyframes를 import한다.
import {keyframes} from 'styled-components';

- animation 변수를 생성한다. keyframs`애니메이션 css`
const rotateAni = keyframes`
  from{
    transform:rotate(0deg);
  }
  to{
    transform:rotate(360deg);
  }
`;

- 사용할 컴포넌트에 animation 속성의 값으로 animation 변수의 이름을 넣는다.
animation: ${rotateAni} 1s linear infinite;

----------------------------------------------------------------
[ Theme ]
- ThemeProvider를 최상위 js 파일에서 불러온다. index.js
import {ThemeProvider} from 'styled-components'

- ThemeProvider로 application을 감싸준다.
<ThemeProvider>
  <App />
</ThemeProvider>

- 이 ThemeProvider에 theme이라는 prop을 내려준다. 
const darkTheme = {
  textColor: "whitesmoke",
  backgroundColor: "#111",
};

<ThemeProvider theme={darkTheme}>
  <App />
</ThemeProvider>

- 이것에 대한 접근은 app 컴포넌트에서 props.theme 객체를 통해 할 수 있다.
const Title = styled.h2`
  font-size: 20px;
  color: ${(props) => props.theme.textColor};
`;



